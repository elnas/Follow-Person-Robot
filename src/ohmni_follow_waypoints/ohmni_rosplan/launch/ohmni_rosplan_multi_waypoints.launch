<?xml version="1.0"?>
<launch>

 
    <!-- ROSPlan turtlebot3 demo with ROSPlan    


    <arg name="map_file" default="$(find rosplan_turtlebot3_demo)/maps/playground.yaml"/>
    <arg name="gazebo_gui" default="true"/>
    -->
    <!-- turtlebot3 simulation     

    <include file="$(find rosplan_turtlebot3_demo)/launch/turtlebot3_bringup_sim.launch" >
        <arg name="gazebo_gui" value="$(arg gazebo_gui)"/>
    </include>
    -->
    <!-- turtlebot3 navigation: move base, amcl (localisation)    

    <include file="$(find turtlebot3_navigation)/launch/turtlebot3_navigation.launch" >
        <arg name="map_file" value="$(arg map_file)"/>
        <arg name="open_rviz" value="false"/>
    </include>
    -->

    
    <!-- roadmap (random waypoint generation) -->
   <include file="$(find rosplan_interface_mapping)/launch/rosplan_roadmap_server.launch" />

    <!-- ROSPlan -->
    <include file="$(find ohmni_rosplan)/launch/ohmni_rosplan_config.launch" >
        <arg name="domain" value="$(find ohmni_rosplan)/common/ohmni_multiwaypoints_domain.pddl"/>
        <arg name="problem" value="$(find ohmni_rosplan)/common/ohmni_multiwaypoints_problem.pddl"/>
    </include>

    <!-- rosplan move base action interface, makes link between rosplan dispatcher and hardware -->
    <node pkg="rosplan_interface_movebase" type="rpmovebase" name="rosplan_interface_movebase" respawn="false" output="screen">
        <param name="knowledge_base" value="rosplan_knowledge_base" />
        <param name="action_server" value="/move_base" />
        <param name="pddl_action_name" value="goto_waypoint" />    
        <param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/ohmni_action_dispatch" /> <!-- dispatch action topic -->
	    <param name="action_feedback_topic" value="/rosplan_plan_dispatcher/ohmni_action_feedback" /> <!-- feedback action topic -->
    </node>
  
    
    <!-- visualisation of robot sensor data -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ohmni_rosplan)/config/ohmni_rosplan.rviz" />

</launch>
